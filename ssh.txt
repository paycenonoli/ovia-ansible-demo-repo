To have proper SSH access to the target machine and configure it in your Ansible inventory file, follow these steps:
________________________________________
1. Ensure SSH Access to the Target Machine
You need to configure SSH access to the target machine for Ansible to work.
Steps to Set Up SSH Access:
1.	Install SSH: Ensure that the target machine has an SSH server installed and running.
o	On Ubuntu/Debian:
sudo apt update && sudo apt install openssh-server
sudo systemctl start ssh
sudo systemctl enable ssh
2.	Create an SSH Key Pair:
o	On your control machine (where you run Ansible), generate an SSH key pair:
ssh-keygen -t rsa -b 4096
o	Save the key pair to the default location (~/.ssh/id_rsa).
3.	Add Your Public Key to the Target Machine:
o	Copy the public key to the target machine using ssh-copy-id:

ssh-copy-id your_user@target_machine_ip
o	Alternatively, manually copy the content of ~/.ssh/id_rsa.pub from your control machine and paste it into ~/.ssh/authorized_keys on the target machine.
4.	Test SSH Access:
o	Verify you can connect to the target machine without a password:
ssh your_user@target_machine_ip
________________________________________
2. Configure the Ansible Inventory File
Ansible needs to know the IP addresses or hostnames of the target machines and the credentials to use.
Create or Edit the Inventory File:
Create a file named inventory.ini and define the target machine(s). For example:
[webservers]
192.168.1.100 ansible_user=your_user ansible_ssh_private_key_file=~/.ssh/id_rsa
•	192.168.1.100: Replace with the IP address or hostname of your target machine.
•	ansible_user: The SSH username used to connect to the target machine.
•	ansible_ssh_private_key_file: Path to the private key file used for authentication (default is ~/.ssh/id_rsa).
________________________________________
3. Verify Connectivity
Before running a playbook, test the connection using the ping module:
ansible -i inventory.ini webservers -m ping
If the connection is successful, you’ll see a response like this:
192.168.1.100 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
________________________________________
Troubleshooting SSH Issues:
•	Permission Denied: Ensure the correct SSH user and key are being used.
•	Firewall Blocking SSH: Open port 22 on the target machine (e.g., with ufw or iptables).
•	SSH Service Down: Ensure the SSH service is running (sudo systemctl start ssh).
________________________________________
Once this is set up, you're ready to run Ansible playbooks targeting your machines! 
